{"name": "test_02[duquyongli0]", "status": "broken", "statusDetails": {"message": "ValueError: Method cannot contain non-token characters 'METHOD = METHOD' (found at least ' ')", "trace": "self = <test_request.Test_case object at 0x00000141B9F8B1D0>\nconn_qianhouzhi = None\nduquyongli = {'name': '获得设备管信息', 'request': {'data': {'projectId': '2c92808e80f408230180f4a9e28d04c8'}, 'headers': {'Content-Type':...b684d00d55566ca7cba3b7836'}, 'method': 'get', 'url': 'http://172.16.0.181:8508/pwrApi/infoscreen/pdeScreen/list', ...}}\n\n    @pytest.mark.parametrize('duquyongli',YamlUtil().read_testcase_yaml('data.yml'))\n    def test_02(self,conn_qianhouzhi,duquyongli):\n        print(duquyongli['name'])\n        print(duquyongli['request']['method'])\n        print(duquyongli['request']['url'])\n        print(duquyongli['request']['data'])\n        print(duquyongli['request']['headers'])\n        method = duquyongli['request']['method']\n        url = duquyongli['request']['url']\n        data = duquyongli['request']['data']\n        headers = duquyongli['request']['headers']\n>       test = RequestsUtil().send_requests('method = method',url,data,headers = headers)\n\ntestcases\\test_request.py:47: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ncommon\\requests_util.py:7: in send_requests\n    rep = RequestsUtil.session.request(method,url = url,data = data,**kwargs)\nvenv\\lib\\site-packages\\requests\\sessions.py:529: in request\n    resp = self.send(prep, **send_kwargs)\nvenv\\lib\\site-packages\\requests\\sessions.py:645: in send\n    r = adapter.send(request, **kwargs)\nvenv\\lib\\site-packages\\requests\\adapters.py:450: in send\n    timeout=timeout\nvenv\\lib\\site-packages\\urllib3\\connectionpool.py:710: in urlopen\n    chunked=chunked,\nvenv\\lib\\site-packages\\urllib3\\connectionpool.py:398: in _make_request\n    conn.request(method, url, **httplib_request_kw)\nvenv\\lib\\site-packages\\urllib3\\connection.py:239: in request\n    super(HTTPConnection, self).request(method, url, body=body, headers=headers)\nD:\\Python\\lib\\http\\client.py:1239: in request\n    self._send_request(method, url, body, headers, encode_chunked)\nD:\\Python\\lib\\http\\client.py:1250: in _send_request\n    self.putrequest(method, url, **skips)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <urllib3.connection.HTTPConnection object at 0x00000141B9F7B4A8>\nmethod = 'METHOD = METHOD', url = '/pwrApi/infoscreen/pdeScreen/list', args = ()\nkwargs = {'skip_accept_encoding': 1}\nmatch = <_sre.SRE_Match object; span=(6, 7), match=' '>\n\n    def putrequest(self, method, url, *args, **kwargs):\n        \"\"\" \"\"\"\n        # Empty docstring because the indentation of CPython's implementation\n        # is broken but we don't want this method in our documentation.\n        match = _CONTAINS_CONTROL_CHAR_RE.search(method)\n        if match:\n            raise ValueError(\n                \"Method cannot contain non-token characters %r (found at least %r)\"\n>               % (method, match.group())\n            )\nE           ValueError: Method cannot contain non-token characters 'METHOD = METHOD' (found at least ' ')\n\nvenv\\lib\\site-packages\\urllib3\\connection.py:216: ValueError"}, "parameters": [{"name": "duquyongli", "value": "{'name': '获得设备管信息', 'request': {'method': 'get', 'url': 'http://172.16.0.181:8508/pwrApi/infoscreen/pdeScreen/list', 'data': {'projectId': '2c92808e80f408230180f4a9e28d04c8'}, 'headers': {'userToken': '63a6ccdb684d00d55566ca7cba3b7836', 'Content-Type': 'application/json; charset=UTF-8'}, 'validata': 'None'}}"}], "start": 1653728992842, "stop": 1653728992846, "uuid": "7d2b9ca4-0b4c-4a11-b383-13285c41a372", "historyId": "eab65526aed01020c0c21fd1f3e2a682", "testCaseId": "57f246f05d1c599e5949f24a9728ed65", "fullName": "testcases.test_request.Test_case#test_02", "labels": [{"name": "parentSuite", "value": "testcases"}, {"name": "suite", "value": "test_request"}, {"name": "subSuite", "value": "Test_case"}, {"name": "host", "value": "weiqiangchen"}, {"name": "thread", "value": "2356-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcases.test_request"}]}