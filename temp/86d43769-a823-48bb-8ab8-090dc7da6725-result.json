{"name": "test_02[duquyongli0]", "status": "broken", "statusDetails": {"message": "AttributeError: 'dict' object has no attribute 'read'", "trace": "self = <test_request.Test_case object at 0x000001F7E089B320>\nconn_qianhouzhi = None\nduquyongli = {'name': '获得设备管信息', 'request': {'data': {'projectId': '2c92808e80f408230180f4a9e28d04c8'}, 'headers': {'Content-Type':...b684d00d55566ca7cba3b7836'}, 'method': 'get', 'url': 'http://172.16.0.181:8508/pwrApi/infoscreen/pdeScreen/list', ...}}\n\n    @pytest.mark.parametrize('duquyongli',YamlUtil().read_testcase_yaml('data.yml'))\n    def test_02(self,conn_qianhouzhi,duquyongli):\n        print(duquyongli['name'])\n        print(duquyongli['request']['method'])\n        print(duquyongli['request']['url'])\n        print(duquyongli['request']['data'])\n        print(duquyongli['request']['headers'])\n        url = duquyongli['request']['url']\n        data = duquyongli['request']['data']\n        headers = duquyongli['request']['headers']\n>       rep = requests.get(url = url,data = json.load(data),headers = headers)\n\ntestcases\\test_request.py:45: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nfp = {'projectId': '2c92808e80f408230180f4a9e28d04c8'}, cls = None\nobject_hook = None, parse_float = None, parse_int = None, parse_constant = None\nobject_pairs_hook = None, kw = {}\n\n    def load(fp, *, cls=None, object_hook=None, parse_float=None,\n            parse_int=None, parse_constant=None, object_pairs_hook=None, **kw):\n        \"\"\"Deserialize ``fp`` (a ``.read()``-supporting file-like object containing\n        a JSON document) to a Python object.\n    \n        ``object_hook`` is an optional function that will be called with the\n        result of any object literal decode (a ``dict``). The return value of\n        ``object_hook`` will be used instead of the ``dict``. This feature\n        can be used to implement custom decoders (e.g. JSON-RPC class hinting).\n    \n        ``object_pairs_hook`` is an optional function that will be called with the\n        result of any object literal decoded with an ordered list of pairs.  The\n        return value of ``object_pairs_hook`` will be used instead of the ``dict``.\n        This feature can be used to implement custom decoders that rely on the\n        order that the key and value pairs are decoded (for example,\n        collections.OrderedDict will remember the order of insertion). If\n        ``object_hook`` is also defined, the ``object_pairs_hook`` takes priority.\n    \n        To use a custom ``JSONDecoder`` subclass, specify it with the ``cls``\n        kwarg; otherwise ``JSONDecoder`` is used.\n    \n        \"\"\"\n>       return loads(fp.read(),\n            cls=cls, object_hook=object_hook,\n            parse_float=parse_float, parse_int=parse_int,\n            parse_constant=parse_constant, object_pairs_hook=object_pairs_hook, **kw)\nE       AttributeError: 'dict' object has no attribute 'read'\n\nD:\\Python\\lib\\json\\__init__.py:296: AttributeError"}, "parameters": [{"name": "duquyongli", "value": "{'name': '获得设备管信息', 'request': {'method': 'get', 'url': 'http://172.16.0.181:8508/pwrApi/infoscreen/pdeScreen/list', 'data': {'projectId': '2c92808e80f408230180f4a9e28d04c8'}, 'headers': {'userToken': '63a6ccdb684d00d55566ca7cba3b7836', 'Content-Type': 'application/json; charset=UTF-8'}, 'validata': 'None'}}"}], "start": 1653725505849, "stop": 1653725505849, "uuid": "0c8a339c-6ddc-40f0-aa17-b6ca6477388a", "historyId": "eab65526aed01020c0c21fd1f3e2a682", "testCaseId": "57f246f05d1c599e5949f24a9728ed65", "fullName": "testcases.test_request.Test_case#test_02", "labels": [{"name": "parentSuite", "value": "testcases"}, {"name": "suite", "value": "test_request"}, {"name": "subSuite", "value": "Test_case"}, {"name": "host", "value": "weiqiangchen"}, {"name": "thread", "value": "12156-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcases.test_request"}]}